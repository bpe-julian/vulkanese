#version 450
#extension GL_EXT_shader_explicit_arithmetic_types_float64 : require
#extension GL_ARB_separate_shader_objects : enable
#define NUMBERS_TO_SUM 67108864
#define SHADER_COUNT 512
#define NUMBERS_PER_SHADER 131072
  // This will be (or has been) replaced by constant definitions
layout(std140, set = 0, binding = 0) buffer sumOut_buf
{
   float64_t sumOut[1024];
};
 // This will be (or has been) replaced by buffer definitions
layout (local_size_x = SHADER_COUNT, local_size_y = 1, local_size_z = 1 ) in;

void main() {
    uint shaderx = gl_LocalInvocationID.x;
    uint shadery = gl_LocalInvocationID.y;
    uint shaderz = gl_LocalInvocationID.z;
    
    float64_t shaderSum = 0;
    // simply loop over the numbers and add
    uint baseIndex = shaderx*NUMBERS_PER_SHADER;
    for(uint i = baseIndex; i < baseIndex+NUMBERS_PER_SHADER; i++){
        shaderSum += float64_t(i);
    }
    // only write to the storage buffer once
    sumOut[shaderx] = shaderSum;
}
